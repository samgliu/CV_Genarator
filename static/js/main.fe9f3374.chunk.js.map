{"version":3,"sources":["components/Information.js","components/Summary.js","components/Career.js","components/Education.js","components/Skill.js","components/Line.js","App.js","index.js"],"names":["Information","props","status","info","renderNormal","type","onClick","dodgeAddingStatus","firstname","lastname","phone","email","information","fn","ln","saveInfo","className","defaultValue","onChange","event","target","value","renderForm","renderSection","Summary","summary","text","input","saveSummary","rows","uniqid","Career","cars","career","time","cname","pos","des","theid","undefined","onCarAddClick","renderAddingHeader","renderHeaderSection","map","car","editing","id","companyname","position","description","saveCarEdition","ca","onCarEditClick","onCarDelClick","Education","edus","education","school","major","onEduAddClick","edu","schoolname","saveEduEdition","onEduEditClick","onEduDelClick","Skill","skills","onSkillAddClick","dodgeAddingSkill","renderAddingSkill","skill","saveSkillEdition","onSkillEditClick","onSkillDelClick","Line","View","style","borderBottomColor","borderBottomWidth","App","state","addingStatus","newIn","this","setState","newSu","newCa","filter","obj","newSkills","push","newEdus","newCars","dodgeSkillEdition","dodgeEduEdition","dodgeCarEdition","forEach","val","thefield","newAddingStatus","i","j","k","l","t","c","p","d","onCareerDelClick","s","m","v","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe9f3374.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Information = (props) => {\n    const { status, info } = props;\n\n    function renderNormal() {\n        return (\n            <div>\n                <h3>\n                    Information\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            props.dodgeAddingStatus(\"information\");\n                        }}\n                    >\n                        ✎\n                    </button>\n                </h3>\n                Name: {info.firstname} {info.lastname} <br />\n                Phone: {info.phone}\n                <br />\n                Email: {info.email}\n            </div>\n        );\n    }\n\n    function renderForm(info) {\n        let fn = info.firstname;\n        let ln = info.lastname;\n        let phone = info.phone;\n        let email = info.email;\n        return (\n            <div>\n                <h3>\n                    Information\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            props.saveInfo(fn, ln, phone, email);\n                        }}\n                    >\n                        ✔\n                    </button>\n                </h3>\n                Name:&nbsp;\n                <input\n                    className=\"skillinpubox\"\n                    type=\"text\"\n                    defaultValue={fn}\n                    onChange={(event) => {\n                        fn = event.target.value;\n                    }}\n                />\n                <input\n                    className=\"skillinpubox\"\n                    type=\"text\"\n                    defaultValue={ln}\n                    onChange={(event) => {\n                        ln = event.target.value;\n                    }}\n                />\n                <br />\n                Phone:\n                <input\n                    className=\"midinputbox\"\n                    type=\"text\"\n                    defaultValue={phone}\n                    onChange={(event) => {\n                        phone = event.target.value;\n                    }}\n                />\n                <br />\n                Email:&nbsp;&nbsp;\n                <input\n                    className=\"midinputbox\"\n                    type=\"text\"\n                    defaultValue={email}\n                    onChange={(event) => {\n                        email = event.target.value;\n                    }}\n                />\n            </div>\n        );\n    }\n\n    function renderSection(info) {\n        if (!status.information) {\n            return renderNormal(info);\n        } else {\n            return renderForm(info);\n        }\n    }\n\n    return <div>{renderSection(info)}</div>;\n};\n\nexport default Information;\n","import React from \"react\";\nimport uniqid from \"uniqid\";\n\nconst Summary = (props) => {\n    const { status, summary } = props;\n\n    function renderNormal() {\n        return (\n            <div>\n                <h3>\n                    Summary\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            props.dodgeAddingStatus(\"summary\");\n                        }}\n                    >\n                        ✎\n                    </button>\n                </h3>\n                {summary.text}\n            </div>\n        );\n    }\n\n    function renderForm(summary) {\n        let input = summary.text;\n        return (\n            <div key={uniqid()}>\n                <h3>\n                    Summary\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            props.saveSummary(input);\n                        }}\n                    >\n                        ✔\n                    </button>\n                </h3>\n                <textarea\n                    className=\"summaryinputbox\"\n                    type=\"text\"\n                    rows=\"5\"\n                    defaultValue={input}\n                    onChange={(event) => {\n                        input = event.target.value;\n                    }}\n                />\n            </div>\n        );\n    }\n\n    function renderSection(summary) {\n        if (!status.summary) {\n            return renderNormal(summary);\n        } else {\n            return renderForm(summary);\n        }\n    }\n\n    return <div>{renderSection(summary)}</div>;\n};\n\nexport default Summary;\n","import React from \"react\";\nimport uniqid from \"uniqid\";\n\nconst Career = (props) => {\n    const { cars, status } = props;\n\n    function renderNormal(ca) {\n        return (\n            <li key={ca.id}>\n                {ca.text.time}&nbsp; &nbsp;Company:&nbsp;\n                {ca.text.companyname}\n                &nbsp; &nbsp;Position:&nbsp;{ca.text.position}\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.onCarEditClick(ca.id);\n                    }}\n                >\n                    ✎\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.onCarDelClick(ca.id);\n                    }}\n                >\n                    ✖\n                </button>\n                <br />\n                {ca.text.description}\n            </li>\n        );\n    }\n\n    function renderForm(car) {\n        let theid = car.id;\n        let time = car.text.time;\n        let cname = car.text.companyname;\n        let pos = car.text.position;\n        let des = car.text.description;\n\n        return (\n            <span key={theid}>\n                Time:\n                <input\n                    className=\"midinputbox\"\n                    type=\"text\"\n                    defaultValue={time}\n                    onChange={(event) => {\n                        time = event.target.value;\n                    }}\n                />\n                Company:\n                <input\n                    className=\"midinputbox\"\n                    type=\"text\"\n                    defaultValue={cname}\n                    onChange={(event) => {\n                        cname = event.target.value;\n                    }}\n                />\n                Position:\n                <input\n                    className=\"midinputbox\"\n                    type=\"text\"\n                    defaultValue={pos}\n                    onChange={(event) => {\n                        pos = event.target.value;\n                    }}\n                />\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.saveCarEdition(theid, time, cname, pos, des);\n                    }}\n                >\n                    ✔\n                </button>\n                <br />\n                Description:\n                <br />\n                <textarea\n                    type=\"text\"\n                    className=\"summaryinputbox\"\n                    rows=\"5\"\n                    defaultValue={des}\n                    onChange={(event) => {\n                        des = event.target.value;\n                    }}\n                />\n            </span>\n        );\n    }\n\n    function renderSection(cars) {\n        return cars.map((car) => {\n            if (!car.editing) {\n                return renderNormal(car);\n            } else {\n                return renderForm(car);\n            }\n        });\n    }\n\n    function renderNormalHeader() {\n        return (\n            <h3>\n                Career&nbsp;\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.dodgeAddingStatus(\"career\");\n                    }}\n                >\n                    ✚\n                </button>\n            </h3>\n        );\n    }\n\n    function renderAddingHeader() {\n        let theid = uniqid();\n        let time;\n        let cname;\n        let pos;\n        let des;\n        return (\n            <div>\n                <h3>Career</h3>\n                <span key={theid}>\n                    Time:\n                    <input\n                        className=\"midinputbox\"\n                        type=\"text\"\n                        defaultValue={time}\n                        onChange={(event) => {\n                            time = event.target.value;\n                        }}\n                    />\n                    Company:\n                    <input\n                        className=\"midinputbox\"\n                        type=\"text\"\n                        defaultValue={cname}\n                        onChange={(event) => {\n                            cname = event.target.value;\n                        }}\n                    />\n                    Position:\n                    <input\n                        className=\"midinputbox\"\n                        type=\"text\"\n                        defaultValue={pos}\n                        onChange={(event) => {\n                            pos = event.target.value;\n                        }}\n                    />\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            if (cname !== undefined) {\n                                props.onCarAddClick(\n                                    theid,\n                                    time,\n                                    cname,\n                                    pos,\n                                    des\n                                );\n                            } else {\n                                props.dodgeAddingStatus(\"career\");\n                            }\n                        }}\n                    >\n                        ✔\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            props.dodgeAddingStatus(\"career\");\n                        }}\n                    >\n                        ✖\n                    </button>\n                    <br />\n                    Description:\n                    <br />\n                    <textarea\n                        type=\"text\"\n                        className=\"summaryinputbox\"\n                        rows=\"5\"\n                        defaultValue={des}\n                        onChange={(event) => {\n                            des = event.target.value;\n                        }}\n                    />\n                </span>\n            </div>\n        );\n    }\n\n    function renderHeaderSection(status) {\n        if (!status.career) {\n            return renderNormalHeader();\n        } else {\n            return renderAddingHeader();\n        }\n    }\n    return (\n        <div>\n            {renderHeaderSection(status)}\n            {renderSection(cars)}\n        </div>\n    );\n};\n\nexport default Career;\n","import React from \"react\";\nimport uniqid from \"uniqid\";\n\nconst Education = (props) => {\n    const { edus, status } = props;\n\n    function renderNormal(edu) {\n        return (\n            <li key={edu.id}>\n                {edu.text.time}&nbsp;&nbsp;\n                {edu.text.schoolname}&nbsp;&nbsp;\n                {edu.text.major}\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.onEduEditClick(edu.id);\n                    }}\n                >\n                    ✎\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.onEduDelClick(edu.id);\n                    }}\n                >\n                    ✖\n                </button>\n            </li>\n        );\n    }\n\n    function renderForm(edu) {\n        let theid = edu.id;\n        let time = edu.text.time;\n        let school = edu.text.schoolname;\n        let major = edu.text.major;\n        return (\n            <span key={theid}>\n                Time:\n                <input\n                    className=\"midinputbox\"\n                    type=\"text\"\n                    defaultValue={time}\n                    onChange={(event) => {\n                        time = event.target.value;\n                    }}\n                />\n                School:\n                <input\n                    className=\"midinputbox\"\n                    type=\"text\"\n                    defaultValue={school}\n                    onChange={(event) => {\n                        school = event.target.value;\n                    }}\n                />\n                Major:\n                <input\n                    className=\"midinputbox\"\n                    type=\"text\"\n                    defaultValue={major}\n                    onChange={(event) => {\n                        major = event.target.value;\n                    }}\n                />\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.saveEduEdition(theid, time, school, major);\n                    }}\n                >\n                    ✔\n                </button>\n            </span>\n        );\n    }\n\n    function renderSection(edus) {\n        return edus.map((edu) => {\n            if (!edu.editing) {\n                return renderNormal(edu);\n            } else {\n                return renderForm(edu);\n            }\n        });\n    }\n\n    function renderNormalHeader() {\n        return (\n            <h3>\n                Education&nbsp;\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.dodgeAddingStatus(\"education\");\n                    }}\n                >\n                    ✚\n                </button>\n            </h3>\n        );\n    }\n\n    function renderAddingHeader() {\n        let time;\n        let school;\n        let major;\n        let theid = uniqid();\n        return (\n            <div>\n                <h3>Education</h3>\n                <span key={theid}>\n                    Time:\n                    <input\n                        className=\"midinputbox\"\n                        type=\"text\"\n                        defaultValue={time}\n                        onChange={(event) => {\n                            time = event.target.value;\n                        }}\n                    />\n                    School:\n                    <input\n                        className=\"midinputbox\"\n                        type=\"text\"\n                        defaultValue={school}\n                        onChange={(event) => {\n                            school = event.target.value;\n                        }}\n                    />\n                    Major:\n                    <input\n                        className=\"midinputbox\"\n                        type=\"text\"\n                        defaultValue={major}\n                        onChange={(event) => {\n                            major = event.target.value;\n                        }}\n                    />\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            if (school !== undefined) {\n                                props.onEduAddClick(theid, time, school, major);\n                            } else {\n                                props.dodgeAddingStatus(\"education\");\n                            }\n                        }}\n                    >\n                        ✔\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            props.dodgeAddingStatus(\"education\");\n                        }}\n                    >\n                        ✖\n                    </button>\n                </span>\n            </div>\n        );\n    }\n\n    function renderHeaderSection(status) {\n        if (!status.education) {\n            return renderNormalHeader();\n        } else {\n            return renderAddingHeader();\n        }\n    }\n\n    return (\n        <div>\n            {renderHeaderSection(status)}\n            {renderSection(edus)}\n        </div>\n    );\n};\n\nexport default Education;\n","import React from \"react\";\nimport uniqid from \"uniqid\";\n\nconst Skill = (props) => {\n    const { skills, status } = props;\n\n    function renderForm(skill) {\n        let input = skill.text;\n        return (\n            <span key={skill.id}>\n                <input\n                    className=\"skillinpubox\"\n                    type=\"text\"\n                    defaultValue={input}\n                    onChange={(event) => {\n                        input = event.target.value;\n                    }}\n                />\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.saveSkillEdition(skill.id, input);\n                    }}\n                >\n                    ✔\n                </button>\n            </span>\n        );\n    }\n\n    function renderNormal(skill) {\n        return (\n            <span key={skill.id}>\n                {skill.text}\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.onSkillEditClick(skill.id);\n                    }}\n                >\n                    ✎\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.onSkillDelClick(skill.id);\n                    }}\n                >\n                    ✖\n                </button>\n                &nbsp;&nbsp;\n            </span>\n        );\n    }\n\n    function renderSection(skills) {\n        return skills.map((skill) => {\n            if (!skill.editing) {\n                return renderNormal(skill);\n            } else {\n                return renderForm(skill);\n            }\n        });\n    }\n\n    function renderNormalSkill() {\n        return (\n            <h3>\n                Skill&nbsp;\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        props.dodgeAddingSkill(\"skills\");\n                    }}\n                >\n                    ✚\n                </button>\n            </h3>\n        );\n    }\n\n    function renderAddingSkill() {\n        let input;\n        let theid = uniqid();\n        return (\n            <h3>\n                Skill&nbsp;\n                <span key={theid}>\n                    <input\n                        className=\"skillinpubox\"\n                        type=\"text\"\n                        defaultValue={input}\n                        onChange={(event) => {\n                            input = event.target.value;\n                        }}\n                    />\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            if (input !== undefined) {\n                                props.onSkillAddClick(theid, input);\n                            } else {\n                                props.dodgeAddingSkill(\"skills\");\n                            }\n                        }}\n                    >\n                        ✔\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            props.dodgeAddingSkill(\"skills\");\n                        }}\n                    >\n                        ✖\n                    </button>\n                </span>\n            </h3>\n        );\n    }\n\n    function renderHeaderSection(status) {\n        if (!status.skills) {\n            return renderNormalSkill();\n        } else {\n            return renderAddingSkill();\n        }\n    }\n\n    return (\n        <div>\n            {renderHeaderSection(status)}\n            {renderSection(skills)}\n        </div>\n    );\n};\n\nexport default Skill;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport default function Line() {\n    return (\n        <View\n            style={{\n                borderBottomColor: \"black\",\n                borderBottomWidth: 1,\n            }}\n        />\n    );\n}\n","import React, { Component } from \"react\";\nimport Information from \"./components/Information\";\nimport Summary from \"./components/Summary\";\nimport Career from \"./components/Career\";\nimport Education from \"./components/Education\";\nimport Skill from \"./components/Skill\";\nimport \"./styles/index.css\";\nimport uniqid from \"uniqid\";\nimport Line from \"./components/Line\";\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            addingStatus: {\n                information: false,\n                summary: false,\n                career: false,\n                education: false,\n                skills: false,\n            },\n            information: {\n                firstname: \"Jone\",\n                lastname: \"Doe\",\n                phone: \"123-456-7890\",\n                email: \"email@test.com\",\n            },\n\n            summary: {\n                text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n            },\n            career: [\n                {\n                    id: uniqid(),\n                    text: {\n                        time: \"2020-2021\",\n                        companyname: \"Some Company Name\",\n                        position: \"Software Engineer\",\n                        description:\n                            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n                    },\n                    editing: false,\n                },\n                {\n                    id: uniqid(),\n                    text: {\n                        time: \"2019-2020\",\n                        companyname: \"Other Company Name\",\n                        position: \"Other Software Engineer\",\n                        description:\n                            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n                    },\n                    editing: false,\n                },\n            ],\n            education: [\n                {\n                    id: uniqid(),\n                    text: {\n                        time: \"2021-2021\",\n                        schoolname: \"Internet School\",\n                        major: \"Computer Sciense\",\n                    },\n                    editing: false,\n                },\n                {\n                    id: uniqid(),\n                    text: {\n                        time: \"2020-2020\",\n                        schoolname: \"Reality School\",\n                        major: \"Living\",\n                    },\n                    editing: false,\n                },\n            ],\n            skills: [\n                { text: \"Coding\", id: uniqid(), editing: false },\n                { text: \"Reading\", id: uniqid(), editing: false },\n            ],\n        };\n    }\n\n    saveInfo(fn, ln, phone, email) {\n        let newIn = this.state.information;\n        newIn.firstname = fn;\n        newIn.lastname = ln;\n        newIn.phone = phone;\n        newIn.email = email;\n        this.setState({\n            information: newIn,\n        });\n        this.dodgeAddingStatus(\"information\");\n    }\n\n    saveSummary(input) {\n        let newSu = this.state.summary;\n        newSu.text = input;\n        this.setState({\n            summary: newSu,\n        });\n        this.dodgeAddingStatus(\"summary\");\n    }\n\n    onCareerDelClick(theid) {\n        let newCa = this.state.career.filter((obj) => obj.id !== theid);\n        this.setState({\n            career: newCa,\n        });\n    }\n\n    onSkillAddClick(theid, input) {\n        let newSkills = this.state.skills;\n        newSkills.push({\n            text: input,\n            id: theid,\n            editing: false,\n        });\n        this.setState({\n            skills: newSkills,\n        });\n    }\n\n    onEduAddClick(theid, time, school, major) {\n        let newEdus = this.state.education;\n        newEdus.push({\n            id: theid,\n            text: {\n                time: time,\n                schoolname: school,\n                major: major,\n            },\n            editing: false,\n        });\n        this.setState({\n            education: newEdus,\n        });\n    }\n\n    onCarAddClick(theid, time, cname, pos, des) {\n        let newCars = this.state.career;\n        newCars.push({\n            id: theid,\n            text: {\n                time: time,\n                companyname: cname,\n                position: pos,\n                description: des,\n            },\n            editing: false,\n        });\n        this.setState({\n            education: newCars,\n        });\n    }\n\n    onSkillEditClick(theid) {\n        this.dodgeSkillEdition(theid);\n    }\n\n    onEduEditClick(theid) {\n        this.dodgeEduEdition(theid);\n    }\n\n    onCarEditClick(theid) {\n        this.dodgeCarEdition(theid);\n    }\n\n    dodgeCarEdition(theid) {\n        let newCars = this.state.career;\n        newCars.forEach((car) => {\n            if (car.id === theid) {\n                if (car.editing) {\n                    car.editing = false;\n                } else {\n                    car.editing = true;\n                }\n            }\n        });\n        this.setState({\n            education: newCars,\n        });\n    }\n\n    dodgeEduEdition(theid) {\n        let newEdus = this.state.education;\n        newEdus.forEach((edu) => {\n            if (edu.id === theid) {\n                if (edu.editing) {\n                    edu.editing = false;\n                } else {\n                    edu.editing = true;\n                }\n            }\n        });\n        this.setState({\n            education: newEdus,\n        });\n    }\n\n    saveSkillEdition(theid, val) {\n        let newSkills = this.state.skills;\n        newSkills.forEach((skill) => {\n            if (skill.id === theid) {\n                skill.text = val;\n            }\n        });\n        this.setState({\n            skills: newSkills,\n        });\n        this.dodgeSkillEdition(theid);\n    }\n\n    saveCarEdition(theid, time, cname, pos, des) {\n        let newCars = this.state.career;\n        newCars.forEach((car) => {\n            if (car.id === theid) {\n                car.id = theid;\n                car.text = {\n                    time: time,\n                    companyname: cname,\n                    position: pos,\n                    description: des,\n                };\n                car.editing = false;\n            }\n        });\n        this.setState({\n            education: newCars,\n        });\n        this.dodgeSkillEdition(theid);\n    }\n    saveEduEdition(theid, time, school, major) {\n        let newEdus = this.state.education;\n        newEdus.forEach((edu) => {\n            if (edu.id === theid) {\n                edu.id = theid;\n                edu.text = {\n                    time: time,\n                    schoolname: school,\n                    major: major,\n                };\n                edu.editing = false;\n            }\n        });\n        this.setState({\n            education: newEdus,\n        });\n        this.dodgeSkillEdition(theid);\n    }\n\n    dodgeSkillEdition(theid) {\n        let newSkills = this.state.skills;\n        newSkills.forEach((skill) => {\n            if (skill.id === theid) {\n                if (skill.editing) {\n                    skill.editing = false;\n                } else {\n                    skill.editing = true;\n                }\n            }\n        });\n        this.setState({\n            skills: newSkills,\n        });\n    }\n\n    dodgeAddingStatus(thefield) {\n        let newAddingStatus = this.state.addingStatus;\n        if (this.state.addingStatus[thefield]) {\n            newAddingStatus[thefield] = false;\n        } else {\n            newAddingStatus[thefield] = true;\n        }\n        this.setState({\n            addingStatus: newAddingStatus,\n        });\n    }\n\n    onSkillDelClick(theid) {\n        let newSkills = this.state.skills.filter((obj) => obj.id !== theid);\n        this.setState({\n            skills: newSkills,\n        });\n    }\n\n    onEduDelClick(theid) {\n        let newEdus = this.state.education.filter((obj) => obj.id !== theid);\n        this.setState({\n            education: newEdus,\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>CV Genarator</h1>\n                <Line />\n                <Information\n                    info={this.state.information}\n                    status={this.state.addingStatus}\n                    dodgeAddingStatus={(i) => this.dodgeAddingStatus(i)}\n                    saveInfo={(i, j, k, l) => this.saveInfo(i, j, k, l)}\n                />\n                <Line />\n                <Summary\n                    summary={this.state.summary}\n                    status={this.state.addingStatus}\n                    dodgeAddingStatus={(i) => this.dodgeAddingStatus(i)}\n                    saveSummary={(i) => this.saveSummary(i)}\n                />\n                <Line />\n                <Career\n                    cars={this.state.career}\n                    status={this.state.addingStatus}\n                    onCarAddClick={(i, t, c, p, d) =>\n                        this.onCarAddClick(i, t, c, p, d)\n                    }\n                    onCarEditClick={(i) => this.onCarEditClick(i)}\n                    onCarDelClick={(i) => this.onCareerDelClick(i)}\n                    saveCarEdition={(i, t, c, p, d) =>\n                        this.saveCarEdition(i, t, c, p, d)\n                    }\n                    dodgeAddingStatus={(i) => this.dodgeAddingStatus(i)}\n                />\n                <Line />\n                <Education\n                    edus={this.state.education}\n                    status={this.state.addingStatus}\n                    onEduAddClick={(i, t, s, m) =>\n                        this.onEduAddClick(i, t, s, m)\n                    }\n                    onEduEditClick={(i) => this.onEduEditClick(i)}\n                    onEduDelClick={(i) => this.onEduDelClick(i)}\n                    saveEduEdition={(i, t, s, m) =>\n                        this.saveEduEdition(i, t, s, m)\n                    }\n                    dodgeAddingStatus={(i) => this.dodgeAddingStatus(i)}\n                />\n                <Line />\n                <Skill\n                    skills={this.state.skills}\n                    status={this.state.addingStatus}\n                    onSkillAddClick={(i, v) => this.onSkillAddClick(i, v)}\n                    onSkillEditClick={(i) => this.onSkillEditClick(i)}\n                    onSkillDelClick={(i) => this.onSkillDelClick(i)}\n                    saveSkillEdition={(i, v) => this.saveSkillEdition(i, v)}\n                    dodgeAddingSkill={(i) => this.dodgeAddingStatus(i)}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}